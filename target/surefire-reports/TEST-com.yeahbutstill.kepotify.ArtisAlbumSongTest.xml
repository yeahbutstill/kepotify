<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="5.787" tests="9" errors="6" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="E:\maya\kepotify\target\test-classes;E:\maya\kepotify\target\classes;C:\Users\Maya Triyanti\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.1\spring-boot-starter-data-jpa-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.1\spring-boot-starter-aop-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-aop\6.1.2\spring-aop-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\aspectj\aspectjweaver\1.9.21\aspectjweaver-1.9.21.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.1\spring-boot-starter-jdbc-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-jdbc\6.1.2\spring-jdbc-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Maya Triyanti\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Maya Triyanti\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Maya Triyanti\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\Maya Triyanti\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Maya Triyanti\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Maya Triyanti\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Maya Triyanti\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\data\spring-data-jpa\3.2.1\spring-data-jpa-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\data\spring-data-commons\3.2.1\spring-data-commons-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-orm\6.1.2\spring-orm-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-context\6.1.2\spring-context-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-tx\6.1.2\spring-tx-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-beans\6.1.2\spring-beans-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-aspects\6.1.2\spring-aspects-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.2.1\spring-boot-starter-hateoas-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\hateoas\spring-hateoas\2.2.0\spring-hateoas-2.2.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.1\spring-boot-starter-validation-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.1\spring-boot-starter-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.1\spring-boot-starter-logging-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Maya Triyanti\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\Maya Triyanti\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.17\tomcat-embed-el-10.1.17.jar;C:\Users\Maya Triyanti\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.1\spring-boot-starter-web-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.1\spring-boot-starter-json-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.1\spring-boot-starter-tomcat-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.17\tomcat-embed-core-10.1.17.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.17\tomcat-embed-websocket-10.1.17.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-web\6.1.2\spring-web-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\io\micrometer\micrometer-observation\1.12.1\micrometer-observation-1.12.1.jar;C:\Users\Maya Triyanti\.m2\repository\io\micrometer\micrometer-commons\1.12.1\micrometer-commons-1.12.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-webmvc\6.1.2\spring-webmvc-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-expression\6.1.2\spring-expression-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-devtools\3.2.1\spring-boot-devtools-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.1\spring-boot-autoconfigure-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\3.2.1\spring-boot-configuration-processor-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.1\spring-boot-starter-test-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-test\3.2.1\spring-boot-test-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.1\spring-boot-test-autoconfigure-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\Maya Triyanti\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Maya Triyanti\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Maya Triyanti\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\Maya Triyanti\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Maya Triyanti\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-core\6.1.2\spring-core-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-jcl\6.1.2\spring-jcl-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-test\6.1.2\spring-test-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="java.vm.vendor" value="BellSoft"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://bell-sw.com/"/>
    <property name="user.timezone" value="Asia/Jakarta"/>
    <property name="user.country.format" value="BB"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\BellSoft\LibericaJDK-21\bin"/>
    <property name="sun.java.command" value="C:\Users\Maya Triyanti\AppData\Local\Temp\surefire5572034090132690350\surefirebooter-20231227132505956_3.jar C:\Users\Maya Triyanti\AppData\Local\Temp\surefire5572034090132690350 2023-12-27T13-25-05_711-jvmRun1 surefire-20231227132505956_1tmp surefire_0-20231227132505956_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="E:\maya\kepotify\target\test-classes;E:\maya\kepotify\target\classes;C:\Users\Maya Triyanti\.m2\repository\org\awaitility\awaitility\4.2.0\awaitility-4.2.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.2.1\spring-boot-starter-data-jpa-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.2.1\spring-boot-starter-aop-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-aop\6.1.2\spring-aop-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\aspectj\aspectjweaver\1.9.21\aspectjweaver-1.9.21.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.2.1\spring-boot-starter-jdbc-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\zaxxer\HikariCP\5.0.1\HikariCP-5.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-jdbc\6.1.2\spring-jdbc-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\hibernate\orm\hibernate-core\6.4.1.Final\hibernate-core-6.4.1.Final.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\Maya Triyanti\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Maya Triyanti\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\classmate\1.6.0\classmate-1.6.0.jar;C:\Users\Maya Triyanti\.m2\repository\net\bytebuddy\byte-buddy\1.14.10\byte-buddy-1.14.10.jar;C:\Users\Maya Triyanti\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.4\jaxb-runtime-4.0.4.jar;C:\Users\Maya Triyanti\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.4\jaxb-core-4.0.4.jar;C:\Users\Maya Triyanti\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\glassfish\jaxb\txw2\4.0.4\txw2-4.0.4.jar;C:\Users\Maya Triyanti\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\data\spring-data-jpa\3.2.1\spring-data-jpa-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\data\spring-data-commons\3.2.1\spring-data-commons-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-orm\6.1.2\spring-orm-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-context\6.1.2\spring-context-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-tx\6.1.2\spring-tx-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-beans\6.1.2\spring-beans-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\slf4j\slf4j-api\2.0.9\slf4j-api-2.0.9.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-aspects\6.1.2\spring-aspects-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.2.1\spring-boot-starter-hateoas-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\hateoas\spring-hateoas\2.2.0\spring-hateoas-2.2.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.2.1\spring-boot-starter-validation-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter\3.2.1\spring-boot-starter-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.2.1\spring-boot-starter-logging-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\ch\qos\logback\logback-classic\1.4.14\logback-classic-1.4.14.jar;C:\Users\Maya Triyanti\.m2\repository\ch\qos\logback\logback-core\1.4.14\logback-core-1.4.14.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.21.1\log4j-to-slf4j-2.21.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\logging\log4j\log4j-api\2.21.1\log4j-api-2.21.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\slf4j\jul-to-slf4j\2.0.9\jul-to-slf4j-2.0.9.jar;C:\Users\Maya Triyanti\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.17\tomcat-embed-el-10.1.17.jar;C:\Users\Maya Triyanti\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.1.Final\hibernate-validator-8.0.1.Final.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.2.1\spring-boot-starter-web-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.2.1\spring-boot-starter-json-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.3\jackson-databind-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.3\jackson-annotations-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.3\jackson-core-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.3\jackson-datatype-jdk8-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.3\jackson-datatype-jsr310-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.3\jackson-module-parameter-names-2.15.3.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.2.1\spring-boot-starter-tomcat-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.17\tomcat-embed-core-10.1.17.jar;C:\Users\Maya Triyanti\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.17\tomcat-embed-websocket-10.1.17.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-web\6.1.2\spring-web-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\io\micrometer\micrometer-observation\1.12.1\micrometer-observation-1.12.1.jar;C:\Users\Maya Triyanti\.m2\repository\io\micrometer\micrometer-commons\1.12.1\micrometer-commons-1.12.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-webmvc\6.1.2\spring-webmvc-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-expression\6.1.2\spring-expression-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-devtools\3.2.1\spring-boot-devtools-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.2.1\spring-boot-autoconfigure-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-configuration-processor\3.2.1\spring-boot-configuration-processor-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.2.1\spring-boot-starter-test-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-test\3.2.1\spring-boot-test-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.2.1\spring-boot-test-autoconfigure-3.2.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.1\jakarta.xml.bind-api-4.0.1.jar;C:\Users\Maya Triyanti\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\net\minidev\json-smart\2.5.0\json-smart-2.5.0.jar;C:\Users\Maya Triyanti\.m2\repository\net\minidev\accessors-smart\2.5.0\accessors-smart-2.5.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Maya Triyanti\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.1\junit-jupiter-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.1\junit-jupiter-api-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\platform\junit-platform-commons\1.10.1\junit-platform-commons-1.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.1\junit-jupiter-params-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.1\junit-jupiter-engine-5.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\junit\platform\junit-platform-engine\1.10.1\junit-platform-engine-1.10.1.jar;C:\Users\Maya Triyanti\.m2\repository\org\mockito\mockito-core\5.7.0\mockito-core-5.7.0.jar;C:\Users\Maya Triyanti\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.10\byte-buddy-agent-1.14.10.jar;C:\Users\Maya Triyanti\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Maya Triyanti\.m2\repository\org\mockito\mockito-junit-jupiter\5.7.0\mockito-junit-jupiter-5.7.0.jar;C:\Users\Maya Triyanti\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Maya Triyanti\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-core\6.1.2\spring-core-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-jcl\6.1.2\spring-jcl-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\springframework\spring-test\6.1.2\spring-test-6.1.2.jar;C:\Users\Maya Triyanti\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Maya Triyanti"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-10-17"/>
    <property name="java.home" value="C:\Program Files\BellSoft\LibericaJDK-21"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="E:\maya\kepotify"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Maya Triyanti\AppData\Local\Temp\surefire5572034090132690350\surefirebooter-20231227132505956_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.1+12-LTS"/>
    <property name="user.name" value="Maya Triyanti"/>
    <property name="stdout.encoding" value="UTF-8"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Maya Triyanti\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bell-sw.com/support"/>
    <property name="java.io.tmpdir" value="C:\Users\MAYATR~1\AppData\Local\Temp\"/>
    <property name="java.version" value="21.0.1"/>
    <property name="user.dir" value="E:\maya\kepotify"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="C:\Program Files\BellSoft\LibericaJDK-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\Maya Triyanti\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\local\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\Maya Triyanti\bin;C:\Program Files\BellSoft\LibericaJDK-21\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin;C:\WINDOWS\System32;C:\WINDOWS\SYSTEM32;C:\WINDOWS;C:\WINDOWS\SYSTEM32\WBEM;C:\WINDOWS\SYSTEM32\WINDOWSPOWERSHELL\V1.0;C:\Program Files\WIDCOMM\Bluetooth Software;C:\Program Files\WIDCOMM\Bluetooth Software\syswow64;C:\WINDOWS\system32;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\WINDOWS\System32\OpenSSH;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\WINDOWS\System32\OpenSSH;C:\Program Files\dotnet;C:\Program Files\BellSoft\LibericaJDK-21\bin;C:\Program Files\Git\cmd;C:\Program Files\PowerShell\7;E:\java\apache-maven-3.9.6\bin;C:\PROGRA~1\Red Gate\Flyway Desktop;C:\Users\Maya Triyanti\AppData\Local\Microsoft\WindowsApps;C:\Users\Maya Triyanti\AppData\Local\JetBrains\Toolbox\scripts;C:\Users\Maya Triyanti\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Git\usr\bin\vendor_perl;C:\Program Files\Git\usr\bin\core_perl;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="UTF-8"/>
    <property name="java.vendor" value="BellSoft"/>
    <property name="java.vm.version" value="21.0.1+12-LTS"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
  </properties>
  <testcase name="testFetchArtisHasAlbums" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="4.98">
    <error message="Cannot invoke &quot;com.yeahbutstill.kepotify.entity.Song.getAlbum()&quot; because &quot;song&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "com.yeahbutstill.kepotify.entity.Song.getAlbum()" because "song" is null
	at com.yeahbutstill.kepotify.ArtisAlbumSongTest.testFetchArtisHasAlbums(ArtisAlbumSongTest.java:256)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[2023-12-27 13:25:08.079 [main] INFO  o.h.jpa.internal.util.LogHelper - [] - HHH000204: Processing PersistenceUnitInfo [name: KEPO]
2023-12-27 13:25:08.159 [main] INFO  org.hibernate.Version - [] - HHH000412: Hibernate ORM core version 6.4.1.Final
2023-12-27 13:25:08.226 [main] INFO  o.h.c.i.RegionFactoryInitiator - [] - HHH000026: Second-level cache disabled
2023-12-27 13:25:08.584 [main] WARN  o.hibernate.orm.connections.pooling - [] - HHH10001002: Using built-in connection pool (not intended for production use)
2023-12-27 13:25:08.589 [main] INFO  o.hibernate.orm.connections.pooling - [] - HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2023-12-27 13:25:08.589 [main] INFO  o.hibernate.orm.connections.pooling - [] - HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/kepotifydb]
2023-12-27 13:25:08.589 [main] INFO  o.hibernate.orm.connections.pooling - [] - HHH10001001: Connection properties: {password=****, user=postgres}
2023-12-27 13:25:08.589 [main] INFO  o.hibernate.orm.connections.pooling - [] - HHH10001003: Autocommit mode: false
2023-12-27 13:25:08.593 [main] INFO  o.hibernate.orm.connections.pooling - [] - HHH10001115: Connection pool size: 20 (min=1)
2023-12-27 13:25:10.333 [main] INFO  o.h.validator.internal.util.Version - [] - HV000001: Hibernate Validator 8.0.1.Final
2023-12-27 13:25:12.294 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - [] - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    select
        s1_0.id,
        s1_0.album_id,
        s1_0.created_at,
        s1_0.created_by,
        s1_0.duration,
        s1_0.environment,
        s1_0.status_record,
        s1_0.title,
        s1_0.updated_at,
        s1_0.updated_by,
        s1_0.version 
    from
        songs s1_0 
    where
        s1_0.id=? 
        and (
            s1_0.status_record='ACTIVE'
        )
]]></system-out>
  </testcase>
  <testcase name="testUpdateArtisHasAlbums" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.08">
    <error message="Cannot invoke &quot;com.yeahbutstill.kepotify.entity.Artist.getHasAlbums()&quot; because &quot;artist&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "com.yeahbutstill.kepotify.entity.Artist.getHasAlbums()" because "artist" is null
	at com.yeahbutstill.kepotify.ArtisAlbumSongTest.testUpdateArtisHasAlbums(ArtisAlbumSongTest.java:196)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.bio,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.environment,
        a1_0.facebook,
        a1_0.instagram,
        a1_0.name,
        a1_0.status_record,
        a1_0.twitter,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.version,
        a1_0.wikipedia 
    from
        artists a1_0 
    where
        a1_0.id=? 
        and (
            a1_0.status_record='ACTIVE'
        )
]]></system-out>
  </testcase>
  <testcase name="testInsertAlbumAndSong" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.314">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        albums
        (created_at, created_by, environment, image, release, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        songs
        (album_id, created_at, created_by, duration, environment, status_record, title, updated_at, updated_by, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testInsertConcerts" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.01">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        concerts
        (created_at, created_by, environment, event_at, lat, location, lon, status_record, updated_at, updated_by, url, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        concerts
        (created_at, created_by, environment, event_at, lat, location, lon, status_record, updated_at, updated_by, url, version, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testArtisHasAlbums" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.009">
    <error message="Cannot invoke &quot;com.yeahbutstill.kepotify.entity.Artist.setHasAlbums(java.util.Set)&quot; because &quot;artist&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "com.yeahbutstill.kepotify.entity.Artist.setHasAlbums(java.util.Set)" because "artist" is null
	at com.yeahbutstill.kepotify.ArtisAlbumSongTest.testArtisHasAlbums(ArtisAlbumSongTest.java:165)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.bio,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.environment,
        a1_0.facebook,
        a1_0.instagram,
        a1_0.name,
        a1_0.status_record,
        a1_0.twitter,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.version,
        a1_0.wikipedia 
    from
        artists a1_0 
    where
        a1_0.id=? 
        and (
            a1_0.status_record='ACTIVE'
        )
]]></system-out>
  </testcase>
  <testcase name="testFindAlbumAndSong" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.121">
    <error message="Cannot invoke &quot;com.yeahbutstill.kepotify.entity.Album.getTitle()&quot; because &quot;album&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "com.yeahbutstill.kepotify.entity.Album.getTitle()" because "album" is null
	at com.yeahbutstill.kepotify.ArtisAlbumSongTest.testFindAlbumAndSong(ArtisAlbumSongTest.java:144)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.environment,
        a1_0.image,
        a1_0.release,
        a1_0.status_record,
        a1_0.title,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.version 
    from
        albums a1_0 
    where
        a1_0.id=? 
        and (
            a1_0.status_record='ACTIVE'
        )
]]></system-out>
  </testcase>
  <testcase name="testSingSong" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.089">
    <error message="Cannot invoke &quot;com.yeahbutstill.kepotify.entity.Artist.setSingSong(java.util.Set)&quot; because &quot;artist&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "com.yeahbutstill.kepotify.entity.Artist.setSingSong(java.util.Set)" because "artist" is null
	at com.yeahbutstill.kepotify.ArtisAlbumSongTest.testSingSong(ArtisAlbumSongTest.java:219)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.bio,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.environment,
        a1_0.facebook,
        a1_0.instagram,
        a1_0.name,
        a1_0.status_record,
        a1_0.twitter,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.version,
        a1_0.wikipedia 
    from
        artists a1_0 
    where
        a1_0.id=? 
        and (
            a1_0.status_record='ACTIVE'
        )
]]></system-out>
  </testcase>
  <testcase name="testInsertArtist" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.124">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        artists
        (bio, created_at, created_by, environment, facebook, instagram, name, status_record, twitter, updated_at, updated_by, version, wikipedia, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
]]></system-out>
  </testcase>
  <testcase name="testInsertArtistPerforms" classname="com.yeahbutstill.kepotify.ArtisAlbumSongTest" time="0.005">
    <error message="Cannot invoke &quot;com.yeahbutstill.kepotify.entity.Artist.setPerforms(java.util.Set)&quot; because &quot;artist&quot; is null" type="java.lang.NullPointerException"><![CDATA[java.lang.NullPointerException: Cannot invoke "com.yeahbutstill.kepotify.entity.Artist.setPerforms(java.util.Set)" because "artist" is null
	at com.yeahbutstill.kepotify.ArtisAlbumSongTest.testInsertArtistPerforms(ArtisAlbumSongTest.java:308)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
]]></error>
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.bio,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.environment,
        a1_0.facebook,
        a1_0.instagram,
        a1_0.name,
        a1_0.status_record,
        a1_0.twitter,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.version,
        a1_0.wikipedia 
    from
        artists a1_0 
    where
        a1_0.id=? 
        and (
            a1_0.status_record='ACTIVE'
        )
]]></system-out>
  </testcase>
</testsuite>